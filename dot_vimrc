" Basic options based on https://missing.csail.mit.edu/2020/editors/
set nocompatible
syntax on
set shortmess+=I
set number
set relativenumber
set laststatus=2
set backspace=indent,eol,start
set hidden
set ignorecase
set smartcase
set incsearch
nmap Q <Nop> " 'Q' in normal mode enters Ex mode. You almost never want this.
set noerrorbells visualbell t_vb=
set mouse+=a

" Plugin options
" vim-plug
call plug#begin()
Plug 'ctrlpvim/ctrlp.vim'
Plug 'mileszs/ack.vim'
Plug 'preservim/nerdtree'
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'itchyny/lightline.vim'
Plug 'preservim/vim-indent-guides'
Plug 'dense-analysis/ale'
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'jiangmiao/auto-pairs'
call plug#end()

" nerdtree
nnoremap <C-t> :NERDTreeToggle<CR>

" lightline.vim
set noshowmode
if !has('gui_running')
  set t_Co=256
endif
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ }

" vim-indent-guides
set ts=2 sw=2 et
let g:indent_guides_start_level=2
let g:indent_guides_enable_on_vim_startup = 1

" Set color scheme.
colorscheme dracula

" Let vim automatically infer indents based on context.
set smartindent

" Mapping configurations
" leader is space
let mapleader = " "

" Insert mode, no recursively
" Map jk to <ESC>.
inoremap jk <ESC>

" Normal mode, no recursively
" Move vertically by visual line.
nnoremap j gj
nnoremap k gk
" Yank to system clipboard
nnoremap <leader>y "+y
nnoremap <leader>p "+p

" Visual mode, no recurseively
" Put from system clipboard
vnoremap <leader>y "+y
vnoremap <leader>p "+p
